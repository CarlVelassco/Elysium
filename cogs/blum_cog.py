import discord
from discord.ext import commands
from discord import app_commands
import json

class BlumCog(commands.Cog):
    """–ö–æ–≥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Blum."""
    def __init__(self, bot):
        self.bot = bot
        self.blum_file = 'blum_list.json'

    def load_blum_list(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ Blum –∏–∑ JSON —Ñ–∞–π–ª–∞."""
        with open(self.blum_file, 'r', encoding='utf-8') as f:
            return json.load(f)

    def save_blum_list(self, data):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ Blum –≤ JSON —Ñ–∞–π–ª."""
        with open(self.blum_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

    blum_group = app_commands.Group(name="blum", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º Blum")

    @blum_group.command(name="add", description="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ Blum")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å")
    async def add_user(self, interaction: discord.Interaction, user: discord.User):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ Blum."""
        blum_list = self.load_blum_list()
        if user.id in blum_list:
            await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ Blum.", ephemeral=True)
            return
        blum_list.append(user.id)
        self.save_blum_list(blum_list)
        await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ Blum.", ephemeral=True)

    @blum_group.command(name="remove", description="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ Blum")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å")
    async def remove_user(self, interaction: discord.Interaction, user: discord.User):
        """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ Blum."""
        blum_list = self.load_blum_list()
        if user.id not in blum_list:
            await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ Blum.", ephemeral=True)
            return
        blum_list.remove(user.id)
        self.save_blum_list(blum_list)
        await interaction.response.send_message(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ Blum.", ephemeral=True)

    @blum_group.command(name="list", description="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ø–∏—Å–∫–µ Blum")
    async def list_users(self, interaction: discord.Interaction):
        """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Blum."""
        blum_list = self.load_blum_list()
        if not blum_list:
            await interaction.response.send_message("–°–ø–∏—Å–æ–∫ Blum –ø—É—Å—Ç.", ephemeral=True)
            return

        description = []
        for user_id in blum_list:
            user = self.bot.get_user(user_id) or await self.bot.fetch_user(user_id)
            if user:
                description.append(f"- {user.mention} (`{user.name}`)")
            else:
                description.append(f"- <@{user_id}> (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω)")

        embed = discord.Embed(
            title="üåô –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Blum",
            description="\n".join(description),
            color=discord.Color.purple()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)

    @blum_group.command(name="clear", description="–ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ Blum")
    async def clear_list(self, interaction: discord.Interaction):
        """–û—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ Blum."""
        self.save_blum_list([])
        await interaction.response.send_message("–°–ø–∏—Å–æ–∫ Blum –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω.", ephemeral=True)


async def setup(bot):
    await bot.add_cog(BlumCog(bot))
