import discord
from discord.ext import commands
from discord import app_commands
import json

class CategoryCog(commands.Cog):
    """–ö–æ–≥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏–≤–µ–Ω—Ç–æ–≤."""
    def __init__(self, bot):
        self.bot = bot
        self.categories_file = 'categories.json'

    def load_categories(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ JSON —Ñ–∞–π–ª–∞."""
        with open(self.categories_file, 'r', encoding='utf-8') as f:
            return json.load(f)

    def save_categories(self, data):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ JSON —Ñ–∞–π–ª."""
        with open(self.categories_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=4)

    category_group = app_commands.Group(name="category", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")

    @category_group.command(name="create", description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
    @app_commands.describe(name="–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    async def create_category(self, interaction: discord.Interaction, name: str):
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –∏–≤–µ–Ω—Ç–æ–≤."""
        categories = self.load_categories()
        if name in categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è `{name}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", ephemeral=True)
            return
        categories[name] = []
        self.save_categories(categories)
        await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è `{name}` —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.", ephemeral=True)

    @category_group.command(name="delete", description="–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
    @app_commands.describe(name="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    async def delete_category(self, interaction: discord.Interaction, name: str):
        """–£–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é."""
        categories = self.load_categories()
        if name == "Other":
            await interaction.response.send_message("–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é `Other`.", ephemeral=True)
            return
        if name not in categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è `{name}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return

        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∏–≤–µ–Ω—Ç—ã –∏–∑ —É–¥–∞–ª—è–µ–º–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ 'Other'
        events_to_move = categories[name]
        if "Other" in categories:
             categories["Other"].extend(events_to_move)
        else:
             categories["Other"] = events_to_move

        del categories[name]
        self.save_categories(categories)
        await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è `{name}` —É–¥–∞–ª–µ–Ω–∞. –í—Å–µ –∏–≤–µ–Ω—Ç—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ `Other`.", ephemeral=True)

    @delete_category.autocomplete('name')
    async def delete_category_autocomplete(self, interaction: discord.Interaction, current: str):
        """–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""
        categories = self.load_categories()
        return [
            app_commands.Choice(name=cat, value=cat)
            for cat in categories if current.lower() in cat.lower() and cat != "Other"
        ]

    @category_group.command(name="add", description="–î–æ–±–∞–≤–∏—Ç—å –∏–≤–µ–Ω—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
    @app_commands.describe(category_name="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", event_name="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞")
    async def add_event_to_category(self, interaction: discord.Interaction, category_name: str, event_name: str):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∏–≤–µ–Ω—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é."""
        categories = self.load_categories()
        if category_name not in categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è `{category_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return
        # –£–¥–∞–ª—è–µ–º –∏–≤–µ–Ω—Ç –∏–∑ –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        for cat, events in categories.items():
            if event_name in events:
                events.remove(event_name)

        categories[category_name].append(event_name)
        self.save_categories(categories)
        await interaction.response.send_message(f"–ò–≤–µ–Ω—Ç `{event_name}` –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é `{category_name}`.", ephemeral=True)

    @add_event_to_category.autocomplete('category_name')
    async def add_event_autocomplete(self, interaction: discord.Interaction, current: str):
        """–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≤–µ–Ω—Ç–∞."""
        categories = self.load_categories()
        return [
            app_commands.Choice(name=cat, value=cat)
            for cat in categories if current.lower() in cat.lower()
        ]

    @category_group.command(name="remove", description="–£–¥–∞–ª–∏—Ç—å –∏–≤–µ–Ω—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    @app_commands.describe(category_name="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", event_name="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞")
    async def remove_event_from_category(self, interaction: discord.Interaction, category_name: str, event_name: str):
        """–£–¥–∞–ª—è–µ—Ç –∏–≤–µ–Ω—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –µ–≥–æ –≤ 'Other'."""
        categories = self.load_categories()
        if category_name not in categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è `{category_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return
        if event_name not in categories[category_name]:
            await interaction.response.send_message(f"–ò–≤–µ–Ω—Ç `{event_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ `{category_name}`.", ephemeral=True)
            return

        categories[category_name].remove(event_name)
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ 'Other' –µ—Å–ª–∏ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if "Other" not in categories:
            categories["Other"] = []
        categories["Other"].append(event_name)

        self.save_categories(categories)
        await interaction.response.send_message(f"–ò–≤–µ–Ω—Ç `{event_name}` —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ `{category_name}` –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ `Other`.", ephemeral=True)

    @remove_event_from_category.autocomplete('category_name')
    async def remove_event_category_autocomplete(self, interaction: discord.Interaction, current: str):
        """–ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–≤–µ–Ω—Ç–∞."""
        categories = self.load_categories()
        return [
            app_commands.Choice(name=cat, value=cat)
            for cat in categories if current.lower() in cat.lower() and cat != "Other"
        ]
    
    # –ó–¥–µ—Å—å –º—ã –Ω–µ –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è event_name, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–Ω–∞—á–∞–ª–∞

    @category_group.command(name="list", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏—Ö –∏–≤–µ–Ω—Ç–æ–≤")
    async def list_categories(self, interaction: discord.Interaction):
        """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö—Å—è –≤ –Ω–∏—Ö –∏–≤–µ–Ω—Ç–æ–≤."""
        categories = self.load_categories()
        if not categories:
            await interaction.response.send_message("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã.", ephemeral=True)
            return

        embed = discord.Embed(title="üìã –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏–≤–µ–Ω—Ç–æ–≤", color=discord.Color.blue())
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —á—Ç–æ–±—ã 'Other' –±—ã–ª–∞ –≤ –∫–æ–Ω—Ü–µ
        sorted_categories = sorted(categories.items(), key=lambda item: item[0] == "Other")
        
        for category, events in sorted_categories:
            event_list = ", ".join(f"`{event}`" for event in events) if events else "–ü—É—Å—Ç–æ"
            embed.add_field(name=f"üìÅ {category}", value=event_list, inline=False)

        await interaction.response.send_message(embed=embed, ephemeral=True)

async def setup(bot):
    await bot.add_cog(CategoryCog(bot))
