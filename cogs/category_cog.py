import discord
from discord import app_commands
from discord.ext import commands
import json

class CategoryCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.categories_file = 'categories.json'
        self.categories = self._load_json()

    def _load_json(self):
        try:
            with open(self.categories_file, 'r', encoding='utf-8') as f:
                return json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            return {}

    def _save_json(self):
        with open(self.categories_file, 'w', encoding='utf-8') as f:
            json.dump(self.categories, f, ensure_ascii=False, indent=4)

    category = app_commands.Group(name="category", description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏–≤–µ–Ω—Ç–æ–≤")

    @category.command(name="create", description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.")
    @app_commands.describe(–Ω–∞–∑–≤–∞–Ω–∏–µ="–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
    async def create(self, interaction: discord.Interaction, –Ω–∞–∑–≤–∞–Ω–∏–µ: str):
        self.categories = self._load_json()
        if –Ω–∞–∑–≤–∞–Ω–∏–µ in self.categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{–Ω–∞–∑–≤–∞–Ω–∏–µ}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", ephemeral=True)
        else:
            self.categories[–Ω–∞–∑–≤–∞–Ω–∏–µ] = []
            self._save_json()
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{–Ω–∞–∑–≤–∞–Ω–∏–µ}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.", ephemeral=True)

    @category.command(name="delete", description="–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.")
    @app_commands.describe(–Ω–∞–∑–≤–∞–Ω–∏–µ="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    async def delete(self, interaction: discord.Interaction, –Ω–∞–∑–≤–∞–Ω–∏–µ: str):
        self.categories = self._load_json()
        if –Ω–∞–∑–≤–∞–Ω–∏–µ not in self.categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{–Ω–∞–∑–≤–∞–Ω–∏–µ}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        else:
            del self.categories[–Ω–∞–∑–≤–∞–Ω–∏–µ]
            self._save_json()
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{–Ω–∞–∑–≤–∞–Ω–∏–µ}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.", ephemeral=True)

    @category.command(name="add", description="–î–æ–±–∞–≤–∏—Ç—å –∏–≤–µ–Ω—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é.")
    @app_commands.describe(–∫–∞—Ç–µ–≥–æ—Ä–∏—è="–ö–∞—Ç–µ–≥–æ—Ä–∏—è, –≤ –∫–æ—Ç–æ—Ä—É—é –¥–æ–±–∞–≤–ª—è–µ–º", –∏–≤–µ–Ω—Ç="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞")
    async def add(self, interaction: discord.Interaction, –∫–∞—Ç–µ–≥–æ—Ä–∏—è: str, –∏–≤–µ–Ω—Ç: str):
        self.categories = self._load_json()
        if –∫–∞—Ç–µ–≥–æ—Ä–∏—è not in self.categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{–∫–∞—Ç–µ–≥–æ—Ä–∏—è}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return
        
        if –∏–≤–µ–Ω—Ç in self.categories[–∫–∞—Ç–µ–≥–æ—Ä–∏—è]:
            await interaction.response.send_message(f"–ò–≤–µ–Ω—Ç '{–∏–≤–µ–Ω—Ç}' —É–∂–µ –µ—Å—Ç—å –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{–∫–∞—Ç–µ–≥–æ—Ä–∏—è}'.", ephemeral=True)
        else:
            self.categories[–∫–∞—Ç–µ–≥–æ—Ä–∏—è].append(–∏–≤–µ–Ω—Ç)
            self._save_json()
            await interaction.response.send_message(f"–ò–≤–µ–Ω—Ç '{–∏–≤–µ–Ω—Ç}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{–∫–∞—Ç–µ–≥–æ—Ä–∏—è}'.", ephemeral=True)

    @category.command(name="remove", description="–£–¥–∞–ª–∏—Ç—å –∏–≤–µ–Ω—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
    @app_commands.describe(–∫–∞—Ç–µ–≥–æ—Ä–∏—è="–ö–∞—Ç–µ–≥–æ—Ä–∏—è, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π —É–¥–∞–ª—è–µ–º", –∏–≤–µ–Ω—Ç="–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞")
    async def remove(self, interaction: discord.Interaction, –∫–∞—Ç–µ–≥–æ—Ä–∏—è: str, –∏–≤–µ–Ω—Ç: str):
        self.categories = self._load_json()
        if –∫–∞—Ç–µ–≥–æ—Ä–∏—è not in self.categories:
            await interaction.response.send_message(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{–∫–∞—Ç–µ–≥–æ—Ä–∏—è}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
            return
        
        if –∏–≤–µ–Ω—Ç not in self.categories[–∫–∞—Ç–µ–≥–æ—Ä–∏—è]:
            await interaction.response.send_message(f"–ò–≤–µ–Ω—Ç '{–∏–≤–µ–Ω—Ç}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{–∫–∞—Ç–µ–≥–æ—Ä–∏—è}'.", ephemeral=True)
        else:
            self.categories[–∫–∞—Ç–µ–≥–æ—Ä–∏—è].remove(–∏–≤–µ–Ω—Ç)
            self._save_json()
            await interaction.response.send_message(f"–ò–≤–µ–Ω—Ç '{–∏–≤–µ–Ω—Ç}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{–∫–∞—Ç–µ–≥–æ—Ä–∏—è}'.", ephemeral=True)

    @category.command(name="list", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏—Ö –∏–≤–µ–Ω—Ç–æ–≤.")
    async def list(self, interaction: discord.Interaction):
        self.categories = self._load_json()
        if not self.categories:
            await interaction.response.send_message("–ù–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.", ephemeral=True)
            return

        embed = discord.Embed(title="–°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏–≤–µ–Ω—Ç–æ–≤", color=discord.Color.blue())
        for category, events in self.categories.items():
            event_list = "\n".join(f"- {event}" for event in events) if events else "–ü—É—Å—Ç–æ"
            embed.add_field(name=f"üìÅ {category}", value=event_list, inline=False)
        
        await interaction.response.send_message(embed=embed, ephemeral=True)

async def setup(bot: commands.Bot):
    await bot.add_cog(CategoryCog(bot))

